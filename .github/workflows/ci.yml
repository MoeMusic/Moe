name: CI

on:
  push:
    branches:
      - main
    tags-ignore:
      - v*
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install

      - name: Lint
        run: |
          poetry run pre-commit run --all-files
          poetry run cz check --rev-range $(git describe --tags --abbrev=0)..HEAD

  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        platform: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install --without docs,lint

      - name: Run tests
        run: |
          poetry run pytest

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install --without lint,test

      - name: Build docs
        run: |
          poetry run sphinx-build -W -b html docs docs/_build/html

  codecov:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install --without docs,lint

      - name: Run all tests and create coverage report
        run: |
          poetry run pytest -v --cov=moe --cov-report=xml

      - name: Upload test coverage report
        uses: codecov/codecov-action@v3
