name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install

      - name: Lint
        run: |
          poetry run pre-commit run --all-files
          poetry run cz check --rev-range c8054a8acb312d3166d046f47ca14617b7f547d..HEAD

  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version: ["3.6.7", "3.7", "3.8", "3.9"]
        platform: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install

      - name: Run tests
        run: |
          poetry run pytest -m "not network"

      - name: Build docs
        run: |
          poetry run sphinx-build -W -b html docs docs/_build/html

  codecov:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install

      - name: Run unit tests and create coverage report
        run: |
          poetry run pytest -v -m "not (integration or network)" --cov=. --cov-report=xml

      - name: Upload unit test coverage report
        uses: codecov/codecov-action@v1
        with:
          flags: unit

      - name: Run integration tests and create coverage report
        run: |
          poetry run pytest -v -m "integration" --cov=. --cov-report=xml

      - name: Upload integration test coverage report
        uses: codecov/codecov-action@v1
        with:
          flags: integration

      - name: Run network tests and create coverage report
        run: |
          poetry run pytest -v -m "network" --cov=. --cov-report=xml

      - name: Upload network test coverage report
        uses: codecov/codecov-action@v1
        with:
          flags: network
